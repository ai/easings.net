version: 2
lang_code: zh-cn
lang_name: 简体中文
rtl: false

title: 缓动函数速查表
description:
  使用正确的缓动函数，让动画效果更加真实。
share:
  缓动函数可以自定义动画在执行中的速度
  使得物体的移动更加自然。现实生活中，
  物体当然不是匀速移动，同样也不会立刻启动或结束。
  这个页面将帮助你选择正确的缓动函数。

about: __format
  ~~缓动函数~~ 自定义参数随时间变化的速率。
  现实生活中，物体并不是突然启动或者停止，
  当然也不可能一直保持匀速移动。就像我们
  打开抽屉的过程那样，刚开始拉的那一下动作很快，
  但是当抽屉被拉出来之后我们会不自觉的放慢动作。
  或是掉落在地板上的物体，一开始下降的速度很快，
  接着就会在地板上来回反弹直到停止。
  这个页面将帮助你选择正确的缓动函数。

howtos:
  css:
    text: 在 CSS 中，transition 和 animation 属性允许你自定义缓动函数。
    edit: 在 ^cubic-bezier.com^ 上编辑。
    with_animation: 在 CSS 中，使用 {{@keyframes}} 来实现这个函数
    example_size: 大小
    example_position: 位置
    example_opacity: 透明度

  postcss:
    text:
      在 PostCSS 中，使用缓动函数就变得方便多了。
      可以使用这个插件 ^postcss-easings^ 来定义 transition 的属性值。 
    explanation: 这种形式和上面的贝塞尔曲线函数一致。
    disabled:
      可惜的是，这个缓动函数不能使用 PostCSS plugin 插件。
      但可以用 {{@keyframes}} 实现，查阅上方。

  gradient:
    name: 渐变
    text: 可以使用工具 ^postcss-easing-gradients^ 来实现渐变。

  mathfunction:
    name: 函数
    text:
      下面的代码由 TypeScript 实现。
      变量 x 表示 0（动画开始）到 1（动画结束）范围内的值。

easing:
  all_easings: 所有缓动函数
  check: 观看缓动变化
  check_size: 大小
  check_position: 位置
  check_opacity: 透明度
  current_func: 当前函数
  linear_func: 线性函数
  load: 加载中...

opensource:
  title: 开源
  translate: 帮助我们将此页面翻译成你的语言

authors:
  sitnik: Andrey Sitnik
  separator: 和
  solovev: Ivan Solovev

theme:
  auto: 默认主题
  light: 亮色主题
  dark: 深色主题
