{
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"sourceType": "module"
	},
	"extends": [
		"eslint:recommended",
		"plugin:prettier/recommended"
	],
	"plugins": [
		"@typescript-eslint",
		"prettier"
	],
	"env": {
		"browser": true,
		"node": true
	},
	"rules": {
		"prettier/prettier": "error",
		"arrow-parens": ["error", "always"],
		"array-bracket-spacing": "error",
		"arrow-spacing": "error",
		"arrow-body-style": "error",
		"block-spacing": "error",
		"brace-style": ["error", "1tbs"],
		"comma-dangle": [
			"error",
			{
				"arrays": "always-multiline",
				"objects": "always-multiline",
				"imports": "always-multiline",
				"exports": "always-multiline",
				"functions": "ignore"
			}
		],
		"eqeqeq": "error",
		"key-spacing": "error",
		"keyword-spacing": ["error", { "after": true }],
		"object-curly-spacing": ["error", "always"],
		"no-prototype-builtins": "error",
		"no-undef": "off"
	},

	"overrides": [
		{
			"files": [
				"*.ts"
			],
			"rules": {
				"no-console": "error",
				"no-undef": "error",
				"no-unused-vars": "off",
				"camelcase": "off",
				"no-array-constructor": "off",
				"no-empty-function": "off",
				"no-use-before-define": "off",
				"no-var": "error",
				"prefer-const": "error",

				"@typescript-eslint/adjacent-overload-signatures": "error",
				"@typescript-eslint/ban-ts-comment": "error",
				"@typescript-eslint/ban-tslint-comment": "error",
				"@typescript-eslint/ban-types": "error",
				"@typescript-eslint/consistent-type-assertions": "error",
				"@typescript-eslint/no-array-constructor": "error",
				"@typescript-eslint/no-empty-interface": "error",
				"@typescript-eslint/no-inferrable-types": "error",
				"@typescript-eslint/no-misused-new": "error",
				"@typescript-eslint/no-namespace": "error",
				"@typescript-eslint/no-non-null-assertion": "warn",
				"@typescript-eslint/no-this-alias": "error",
				"@typescript-eslint/no-var-requires": "error",
				"@typescript-eslint/prefer-namespace-keyword": "error",
				"@typescript-eslint/triple-slash-reference": "error",
				"@typescript-eslint/type-annotation-spacing": "error",
				"@typescript-eslint/interface-name-prefix": "off",
				"@typescript-eslint/camelcase": "off",
				"@typescript-eslint/no-use-before-define": [
					"error",
					{ "functions": false }
				],
				"@typescript-eslint/no-unused-vars": [
					"error",
					{ "argsIgnorePattern": "^_" }
				],
				"@typescript-eslint/no-explicit-any": "off",
				"@typescript-eslint/no-empty-function": "off",
				"@typescript-eslint/explicit-function-return-type": "error"
			}
		}
	]
}
