mixin Item(item, index)
	-
		const radioScale = 1;
		const chartWidth = 125 * radioScale;
		const chartHeight = 85 * radioScale;
		const points = /([-\d.]+), ([-\d.]+), ([-\d.]+), ([-\d.]+)/.exec(item.css);
		const x1 = (parseFloat(points[1]) * chartWidth).toFixed(3);
		const y1 = ((1 - parseFloat(points[2])) * chartHeight).toFixed(3);
		const x2 = (parseFloat(points[3]) * chartWidth).toFixed(3);
		const y2 = ((1 - parseFloat(points[4])) * chartHeight).toFixed(3);

		const a = '';

		const ratioMask = 1.1951;
		const strokeLength = item.path / ratioMask;

		var gradient = 'inOut';
		if (index === 0) gradient = 'in';
		if (index === 1) gradient = 'out';


	.b-function.js-function(id=(`func-${item.name}`) data-name=item.name data-func=item.css data-path-length=item.length)
		a.b-function__chart.b-chart.js-function-chart(href=`#${item.name}` data-length=strokeLength)
			.b-chart__wrap.js-chart-for-info
				svg.b-chart__image(viewBox=(`0 0 ${chartWidth} ${chartHeight}`) xmlns="http://www.w3.org/2000/svg")
					g.b-chart__explanations
						path.b-chart__axis(d=(`M1 0V${chartHeight - 1}H${chartWidth}`) fill="none")
						text.b-chart__text(x="4" y="8") x
						text.b-chart__text(x=(chartWidth - 3) y=(chartHeight - 5) text-anchor="end") t

					path.b-chart__curve(d=(`M1 ${chartHeight-1}C${x1} ${y1} ${x2} ${y2} ${chartWidth-1} 1`)
					fill="none" stroke=(`url(#${gradient})`))

				.b-chart__cursor(style=`transition-timing-function:${item.css}`)

		.b-function__caption= item.name
